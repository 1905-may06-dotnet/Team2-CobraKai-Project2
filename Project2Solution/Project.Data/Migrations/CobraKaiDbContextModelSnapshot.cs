// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project.Data;

namespace Project.Data.Migrations
{
    [DbContext(typeof(CobraKaiDbContext))]
    partial class CobraKaiDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Project.Data.Entities.Journal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("PersonId");

                    b.Property<int?>("SongId");

                    b.Property<string>("Title")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.HasIndex("SongId");

                    b.ToTable("Journals","CobraKai");
                });

            modelBuilder.Entity("Project.Data.Entities.ListEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Favorite");

                    b.Property<string>("JournalEntry");

                    b.Property<int?>("JournalId");

                    b.Property<int?>("MusicListId");

                    b.Property<int?>("PlayListId");

                    b.Property<int?>("SongId");

                    b.Property<int?>("SonglistId");

                    b.Property<string>("TimeStamp");

                    b.HasKey("Id");

                    b.HasIndex("JournalId");

                    b.HasIndex("MusicListId");

                    b.HasIndex("SongId");

                    b.HasIndex("SonglistId");

                    b.ToTable("ListEntries");
                });

            modelBuilder.Entity("Project.Data.Entities.MusicList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("PersonId");

                    b.HasKey("Id");

                    b.ToTable("MusicLists");
                });

            modelBuilder.Entity("Project.Data.Entities.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("Firstname");

                    b.Property<string>("Lastname");

                    b.Property<int?>("MusicListId");

                    b.Property<string>("Password");

                    b.Property<string>("Username")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("MusicListId");

                    b.ToTable("People");
                });

            modelBuilder.Entity("Project.Data.Entities.Playlist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("PersonId");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("Playlists","CobraKai");
                });

            modelBuilder.Entity("Project.Data.Entities.Song", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Artist");

                    b.Property<string>("FilePath");

                    b.Property<string>("Genre");

                    b.Property<string>("Length");

                    b.Property<string>("ReleaseDate");

                    b.Property<decimal?>("Size");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("Songs");
                });

            modelBuilder.Entity("Project.Data.Entities.Journal", b =>
                {
                    b.HasOne("Project.Data.Entities.Person", "Person")
                        .WithMany("Journals")
                        .HasForeignKey("PersonId");

                    b.HasOne("Project.Data.Entities.Song", "Song")
                        .WithMany("Journals")
                        .HasForeignKey("SongId");
                });

            modelBuilder.Entity("Project.Data.Entities.ListEntry", b =>
                {
                    b.HasOne("Project.Data.Entities.Journal", "Journal")
                        .WithMany("ListEntries")
                        .HasForeignKey("JournalId");

                    b.HasOne("Project.Data.Entities.Playlist", "MusicList")
                        .WithMany("ListEntries")
                        .HasForeignKey("MusicListId");

                    b.HasOne("Project.Data.Entities.Song", "Song")
                        .WithMany("ListEntries")
                        .HasForeignKey("SongId");

                    b.HasOne("Project.Data.Entities.MusicList", "Songlist")
                        .WithMany("ListEntries")
                        .HasForeignKey("SonglistId");
                });

            modelBuilder.Entity("Project.Data.Entities.Person", b =>
                {
                    b.HasOne("Project.Data.Entities.MusicList", "MusicList")
                        .WithMany("People")
                        .HasForeignKey("MusicListId");
                });

            modelBuilder.Entity("Project.Data.Entities.Playlist", b =>
                {
                    b.HasOne("Project.Data.Entities.Person", "Person")
                        .WithMany("Playlists")
                        .HasForeignKey("PersonId");
                });
#pragma warning restore 612, 618
        }
    }
}
